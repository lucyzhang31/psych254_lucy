d <- read.csv("/Users/lucyzhang/documents/254/psych254_materials/data/janiszewski_rep_exercise.csv")
d <- read.csv("/Users/lucyzhang/psych254_materials/data/janiszewski_rep_exercise.csv")
d <- read.csv("Users/lucyzhang/psych254_materials/data/janiszewski_rep_exercise.csv")
d <- read.csv("/Users/lucyzhang/psych254_lucy/data/janiszewski_rep_exercise.csv")
d <- read.csv("/Users/lucyzhang/psych254_lucy/data/janiszewski_rep_cleaned.csv")
instsall.packages('lavaan')
install.packages('lavaan')
library("lavaan", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
d.raw <- read.csv("/Users/lucyzhang/psych254_lucy/data/janiszewski_rep_exercise.csv")
library(ggplot2)
library(reshape2)
library(bootstrap)
library(lme4)
library(stringr)
library(lubridate)
library(plyr) # first load plyr then dplyr from https://github.com/hadley/dplyr
library(dplyr)
library(tidyr)
d <- read.csv("/Users/lucyzhang/psych254_lucy/data/janiszewski_rep_exercise.csv")
d <- read.csv("/Users/lucyzhang/psych254_lucy/data/janiszewski_rep_cleaned.csv")
d.tidy<-select(d, WorkerId, Input.price1, Input.price2, Input.price3, Input.condition, Answer.dog_cost, Answer.plasma_cost, Answer.sushi_cost)
d.tidy<-rename(d.tidy, sushi=Answer.sushi_cost)
d.tidy<-rename(d.tidy, condition=Input.condition)
d.tidy<-rename(d.tidy, price1=Input.price1); d.tidy<-rename(d.tidy, price2=Input.price2); d.tidy<-rename(d.tidy, price3=Input.price3)
d.tidy<-rename(d.tidy, dog=Answer.dog_cost); d.tidy<-rename(d.tidy, plasma=Answer.plasma_cost)
d.tidy2<-select(d.tidy, WorkerId, condition, dog, plasma, sushi)
d.tidy3<-gather(d.tidy2, item, answerprice, -condition, -WorkerId)
d.wide <- spread(d.tidy3, item, answerprice)
d.raw <- read.csv("/Users/lucyzhang/psych254_lucy/data/janiszewski_rep_exercise.csv")
d.unique.subs<-distinct(d.raw, WorkerId)
d.tidy3 %>%
group_by(item, na.rm=TRUE) %>%
summarise(price=mean(answerprice, na.rm=TRUE))
d.tidy <- d %>%
select(WorkerId, Input.condition,
starts_with("Answer"),
starts_with("Input")) %>%
rename(workerid = WorkerId,
condition = Input.condition,
plasma_anchor = Input.price1,
dog_anchor = Input.price2,
sushi_anchor = Input.price3,
dog_cost = Answer.dog_cost,
plasma_cost = Answer.plasma_cost,
sushi_cost = Answer.sushi_cost) %>%
gather(name, cost,
dog_anchor, plasma_anchor, sushi_anchor,
dog_cost, plasma_cost, sushi_cost) %>%
separate(name, c("item", "type"), sep = "_") %>%
spread(type, cost)
pcts <- d.tidy %>%
mutate(pct_change = abs((anchor-cost)/anchor)) %>%
group_by(condition) %>%
summarize(pct_change=mean(pct_change, na.rm=TRUE))
pcts2 <- d.tidy %>%
mutate(pct_change = abs((anchor-cost)/anchor)) %>%
group_by(item) %>%
summarize(pct_change=mean(pct_change, na.rm=TRUE))
z.scores <- d.tidy %>%
group_by(item) %>%
mutate(z=scale(cost)[,1]) %>%
group_by(condition, add=TRUE) %>%
summarize(z=mean(z, na.rm=TRUE))
qplot(item, pct_change, fill=condition,
position="dodge",
stat="identity", geom="bar",
data=pcts)
head(pcts)
head(pcts2)
View(pcts2)
View(pcts2)
qplot(item, z, fill=condition,
position="dodge",
stat="identity", geom="bar",
data=z.scores)
pcts <- d.tidy %>%
mutate(pct_change = abs((anchor-cost)/anchor)) %>%
group_by(condition) %>%
group_by(item, add=TRUE) %>%
summarize(pct_change=mean(pct_change, na.rm=TRUE))
View(pcts)
View(pcts)
qplot(item, pct_change, fill=condition,
position="dodge",
stat="identity", geom="bar",
data=pcts)
qplot(item, z, fill=condition,
position="dodge",
stat="identity", geom="bar",
data=z.scores)
library(dplyr)
library(ggplot2)
setwd("~/psych254_lucy/data")
(.288+.273)/2
326.8/204.875
14.9-(1.595*(56.5/50))
14.9-(562.5/50)
(1.595*9)+13.097
(1.595*12)+13.097
(889.8*(1-(.76^2)))/48
sqrt(7.83)
14.9-(1.595*(56.5/50))
14.9-(1.595*(562.5/50))
dboot<-function(x,med,y,iterations=10000) {
as.data.frame(cbind(x,med,y))->vars;
length(x)->N;
Vector(length=iterations)->bootab
for (i in 1:iterations) {
sample(c(1:N),N,replace=T)->sampnums;
lm(vars[sampnums,2]~vars[sampnums,1])$coefficients[2]->itera;
lm(vars[sampnums,3]~vars[sampnums,2]+vars[sampnums,1])$coefficients[2]->iterb;
itera*iterb->bootab[i]
}
dboot<-function(x,med,y,iterations=10000) {
as.data.frame(cbind(x,med,y))->vars;
length(x)->N;
Vector(length=iterations)->bootab
for (i in 1:iterations) {
sample(c(1:N),N,replace=T)->sampnums;
lm(vars[sampnums,2]~vars[sampnums,1])$coefficients[2]->itera;
lm(vars[sampnums,3]~vars[sampnums,2]+vars[sampnums,1])$coefficients[2]->iterb;
itera*iterb->bootab[i]
}
hist(bootab,main=paste("Bootsrapped a*b, with",iterations,"iterations"),col="red");
print("Bootstrap results:",quote=F);
print(c(ab=mean(bootab)));
print(quantile(bootab,c(.025,.975)))
}
bm.bootstrapmed(feedback,statese,hostility2,
iterations=10000)
bm.bootstrapmed<-function(x,med,y,iterations=10000) {
as.data.frame(cbind(x,med,y))->vars;
length(x)->N;
Vector(length=iterations)->bootab
for (i in 1:iterations) {
sample(c(1:N),N,replace=T)->sampnums;
lm(vars[sampnums,2]~vars[sampnums,1])$coefficients[2]->itera;
lm(vars[sampnums,3]~vars[sampnums,2]+vars[sampnums,1])$coefficients[2]->iterb;
itera*iterb->bootab[i]
}
hist(bootab,main=paste("Bootsrapped a*b, with",iterations,"iterations"),col="red");
print("Bootstrap results:",quote=F);
print(c(ab=mean(bootab)));
print(quantile(bootab,c(.025,.975)))
}
cb
l;''
)
bm.bootstrapmed<-function(x,med,y,iterations=10000) {
as.data.frame(cbind(x,med,y))->vars;
length(x)->N;
Vector(length=iterations)->bootab
for (i in 1:iterations) {
sample(c(1:N),N,replace=T)->sampnums;
lm(vars[sampnums,2]~vars[sampnums,1])$coefficients[2]->itera;
lm(vars[sampnums,3]~vars[sampnums,2]+vars[sampnums,1])$coefficients[2]->iterb;
itera*iterb->bootab[i]
}
hist(bootab,main=paste("Bootsrapped a*b, with",iterations,"iterations"),col="red");
print("Bootstrap results:",quote=F);
print(c(ab=mean(bootab)));
print(quantile(bootab,c(.025,.975)))
}
bm.bootstrapmed(feedback,statese,hostility2,
iterations=5000)
bm.bootstrapmed<-function(x,med,y,iterations=10000) {
as.data.frame(cbind(x,med,y))->vars;
length(x)->N;
Vector(length=iterations)->bootab
for (i in 1:iterations) {
sample(c(1:N),N,replace=T)->sampnums;
lm(vars[sampnums,2]~vars[sampnums,1])$coefficients[2]->itera;
lm(vars[sampnums,3]~vars[sampnums,2]+vars[sampnums,1])$coefficients[2]->iterb;
itera*iterb->bootab[i]
}
hist(bootab,main=paste("Bootsrapped a*b, with",iterations,"iterations"),col="red");
print("Bootstrap results:",quote=F);
print(c(ab=mean(bootab)));
print(quantile(bootab,c(.025,.975)))
}
bm.bootstrapmed(feedback,statese,hostility2,
iterations=10000)
rnorm?
mj
?rnorm
d <- 30
for (i in 1:30) {print(i)}
