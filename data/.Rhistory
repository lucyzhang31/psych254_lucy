d.tidy<-rename(d.tidy, sushi=Answer.sushi_cost)
d.tidy<-rename(d.tidy, condition=Input.condition)
d.tidy<-rename(d.tidy, price1=Input.price1); d.tidy<-rename(d.tidy, price2=Input.price2); d.tidy<-rename(d.tidy, price3=Input.price3)
d.tidy<-rename(d.tidy, dog=Answer.dog_cost); d.tidy<-rename(d.tidy, plasma=Answer.plasma_cost)
d.tidy2<-select(d.tidy, WorkerId, condition, dog, plasma, sushi)
```
View(d.tidy2)
View(d.tidy3)
d.tidy3<-gather(d.tidy2, WorkerId, item, answerprice, -condition)
View(d.tidy3)
View(d.tidy3)
d.tidy3<-gather(d.tidy2, item, answerprice, -condition, -WorkerId)
View(d.tidy3)
View(d.tidy3)
View(d.tidy3)
d.wide <- spread(d.tidy3, WorkerId, answerprice)
View(d.wide)
d.wide <- spread(d.tidy3, answerprice, WorkerId)
View(d.wide)
View(d.wide)
d.wide <- spread(d.tidy3, item, answerprice)
View(d.wide)
View(d.wide)
d.raw <- read.csv("/Users/lucyzhang/documents/254/psych254_materials/data/janiszewski_rep_cleaned.csv")
d.unique.subs<-distinct(d.raw, WorkerId)
View(d.unique.subs)
View(d.unique.subs)
d.raw <- read.csv("/Users/lucyzhang/documents/254/psych254_materials/data/janiszewski_rep_exercise.csv")
View(d.tidy2)
summarise(d.tidy2, plasma=mean(plasma))
summarise(d.tidy2, sushi=mean(sushi))
summarise(d.tidy2, sushi=mean(sushi, na.rm=True))
summarise(d.tidy2, sushi=mean(sushi), na.rm=True)
?summarise
d.tidy3 %>%
group_by(item, na.rm=TRUE) %>%
summarise(price=mean(answerprice))
d.tidy3 %>%
group_by(item, na.rm=TRUE) %>%
summarise(price=mean(answerprice, na.rm=TRUE))
summarise(d.tidy2, sushi=mean(sushi, na.rm=TRUE))
pcts <- d.tidy %>%
mutate(pct_change = abs((anchor-cost)/anchor)) %>%
group_by(condition) %>%
summarize(pct_change=mean(pct_change, na.rm=TRUE))
d.tidy <- d %>%
select(WorkerId, Input.condition,
starts_with("Answer"),
starts_with("Input")) %>%
rename(workerid = WorkerId,
condition = Input.condition,
plasma_anchor = Input.price1,
dog_anchor = Input.price2,
sushi_anchor = Input.price3,
dog_cost = Answer.dog_cost,
plasma_cost = Answer.plasma_cost,
sushi_cost = Answer.sushi_cost) %>%
gather(name, cost,
dog_anchor, plasma_anchor, sushi_anchor,
dog_cost, plasma_cost, sushi_cost) %>%
separate(name, c("item", "type"), sep = "_") %>%
spread(type, cost)
pcts <- d.tidy %>%
mutate(pct_change = abs((anchor-cost)/anchor)) %>%
group_by(condition) %>%
summarize(pct_change=mean(pct_change, na.rm=TRUE))
View(pcts)
pcts2 <- d.tidy %>%
mutate(pct_change = abs((anchor-cost)/anchor)) %>%
group_by(item) %>%
summarize(pct_change=mean(pct_change, na.rm=TRUE))
View(pcts2)
View(pcts)
?scale
z-scores <- d %>%
group_by(item, na.rm=TRUE) %>%
summarize(mean(pct_change, na.rm=TRUE)) %>%
summarize(sd(pct_change, na.rm=TRUE))
View(pcts2)
View(pcts2)
View(pcts)
?scalle
?scale
z-scores <- pcts %>%
group_by(item, na.rm=TRUE) %>%
group_by(condition, add=TRUE)
View(pcts2)
z-scores <- d %>%
group_by(item, na.rm=TRUE) %>%
group_by(condition, add=TRUE) %>%
n
z-scores <- d %>%
group_by(item, na.rm=TRUE) %>%
group_by(condition, add=TRUE) %>%
summarize(z=mean(pct_change, na.rm=TRUE))
View(d)
View(d.raw)
View(d.unique.subs)
View(d.wide)
View(pcts)
View(pcts2)
d.tidy <- d %>%
select(WorkerId, Input.condition,
starts_with("Answer"),
starts_with("Input")) %>%
rename(workerid = WorkerId,
condition = Input.condition,
plasma_anchor = Input.price1,
dog_anchor = Input.price2,
sushi_anchor = Input.price3,
dog_cost = Answer.dog_cost,
plasma_cost = Answer.plasma_cost,
sushi_cost = Answer.sushi_cost) %>%
gather(name, cost,
dog_anchor, plasma_anchor, sushi_anchor,
dog_cost, plasma_cost, sushi_cost) %>%
separate(name, c("item", "type"), sep = "_") %>%
spread(type, cost)
View(d.tidy)
?mutate
View(pcts)
chisq(pct_change)
?chisq
chisq.test(pcts, pct_change)
?chisq.test
chisq.test(pcts, x=condition, y=pct_change)
chisq.test(as.table(pcts$pct_change))
z-scores <- d.tidy %>%
group_by(item, na.rm=TRUE) %>%
mutate(z=scale(cost)[,1]) %>%
group_by(condition, add=TRUE) %>%
summarize(z=mean(z, na.rm=TRUE))
z.scores <- d.tidy %>%
group_by(item) %>%
mutate(z=scale(cost)[,1]) %>%
group_by(condition, add=TRUE) %>%
summarize(z=mean(z, na.rm=TRUE))
View(z.scores)
View(pcts2)
View(pcts2)
?scale
qplot(item, z, fill=condition,
position="dodge",
stat="identity", geom="bar",
data=z.scores)
library(ggplot2)
library(reshape2)
library(bootstrap)
library(lme4)
library(stringr)
library(lubridate)
library(plyr) # first load plyr then dplyr from https://github.com/hadley/dplyr
library(dplyr)
library(tidyr)
Part 1: Data cleaning
---------------------
install.packages("ggplot2")
library(ggplot2)
```
head(diamonds)
qplot(diamonds$carat, diamonds$price)
diamonds %>%
qplot(carat, price)
library(reshape2)
library(bootstrap)
library(lme4)
library(stringr)
library(lubridate)
library(plyr) # first load plyr then dplyr from https://github.com/hadley/dplyr
library(dplyr)
library(tidyr)
diamonds %>%
qplot(carat, price)
diamonds %>%
qplot(carat, price)
diamonds %>%
qplot(carat, price) %>%
m
diamonds %>%
qplot(carat, price)
```
head(diamonds)
diamonds %>%
qplot(carat, price)
qplot(diamonds$clarity, diamonds$price)
qplot(diamonds$cut, diamonds$price)
qplot(diamonds$color, diamonds$price)
qplot(diamonds$carat, diamonds$price)
d<-diamonds
View(d)
View(d)
d<-diamonds
d %>%
qplot(carat, price)
as.numeric(d$carat)
d %>%
qplot(carat, price)
(24-17)^2/17
((24-17)^2/17)+((14-17)^2/17)+((8-17)^2/17)
1313- (9025/18)
811.611/17
squrt(47.74)
sqrt(47.74)
6.909/(sqrt(18))
install.packages("ggplot2")
library(ggplot2)
library(reshape2)
library(bootstrap)
library(lme4)
library(stringr)
library(lubridate)
library(plyr) # first load plyr then dplyr from https://github.com/hadley/dplyr
library(dplyr)
library(tidyr)
setwd("~/psych254_lucy/data")
head(diamonds)
qplot(diamonds$carat, diamonds$price)
d<-diamonds
as.numeric(d$carat)
d %>%
qplot(carat, price)
View(d)
View(d)
qplot(carat, price, data = d)
qplot(clarity, price, data=d)
qplot(cut, price, data=d)
qplot(color, price)
qplot(carat, price, shape = cut, color = clarity, data = diamonds)
qplot(carat, price, shape = clarity, color = cut, data = diamonds)
d%>%
qplot(carat, price, shape = cut, color = clarity) %>%
qplot(carat, price, shape = clarity, color = cut)
qplot(carat, price, data = diamonds, facets = cut ~ clarity)
qplot(carat, price, data = diamonds, facets = clarity ~ cut)
qplot(carat, price, color = clarity, data = diamonds, facets = ~ cut)
qplot(carat, price, color = cut, facets = ~ clarity, data = diamonds)
qplot(carat, price, color = cut, facets . = ~ clarity, data = diamonds)
qplot(carat, price, color = cut, facets = . ~ clarity, data = diamonds)
qplot(carat, price, color = clarity, facets = . ~ cut, data = diamonds)
qplot(carat, price, color = clarity, facets = ~ cut, data = diamonds)
qplot(price, geom = 'histogram', data = d)
qplot(carat, geom = 'histogram', data = d)
?qplot
qplot(carat, geom = 'point', data = d)
?qplot
qplot(price, geom = 'boxplot', data = d)
?qplot
qplot(price, carat, geom = 'boxplot', data = d)
qplot(cut, carat, geom = 'boxplot', data = d)
qplot(clarity, carat, geom = 'boxplot', data = d)
qplot(cut, price, geom = 'boxplot', data = d)
qplot(clarity, price, geom = 'boxplot', data = d)
qplot(carat, price, geom = 'boxplot', data = d)
ggplot(clarity, price, geom = 'boxplot', data = d)
?ggplot
ggplot(diamonds, aes(x=carat, y=price)) + geom_point(shape=1)
+facet_grid(carat ~ .)
ggplot(diamonds, aes(x=carat, y=price)) + geom_point(shape=1)
+facet_grid(~color)
ggplot(diamonds, aes(x=carat, y=price)) + geom_point(shape=1)
+facet_grid(cut~color)
ggplot(diamonds, aes(x=carat, y=price)) + geom_point(shape=1)
+facet(cut~color)
ggplot(diamonds, aes(x=carat, y=price)) + geom_point(shape=1)
+facet_grid(.~color)
ggplot(diamonds, aes(x=carat, y=price)) + geom_point(shape=1)
+facet(color)
4.47*((1/18)+(1/20))
(85+76)/(18+20-2)
sqrt(.4718)
1.8/.68
3.639*((1/18)+(1/20))
sqrt(.3841)
1.8/.62
1.8/.68
1.8+((2.042/2)*.68)
2.8/.8944
1960/65.171
1960/67.505
1960/33098
1960/33.098
1960/34.764
(33.098+34.764)/2
1960/33.931
(70.197+72.613)/2
1960/17.405
1960/71.405
(65.171+67.505)/2
1960/66.338
(60.907+63.167)/2
1960/62.037
sqrt(40)
1.96*((sqrt(40))/(sqrt(50)))
(1.96*(sqrt(40)))
1.96*6.32
12.38*12.38
?ggplot
gg <- ggplot(diamonds, aes(x=carat, y=price)) + geom_point(data=d, shape=1)
ggplot(diamonds, aes(x=carat, y=price)) + geom_point(data=d, shape=1)
ggplot(diamonds, aes(x=carat, y=price)) + geom_point(data=d, shape=1) + facet(=~cut)
ggplot(diamonds, aes(x=carat, y=price)) + geom_point(data=d, shape=1) + facet_grid(data=d, ~cut)
ggplot(diamonds, aes(x=carat, y=price)) + geom_point(data=d, shape=1) + facet_grid(~cut)
ggplot(diamonds, aes(x=carat, y=price)) + geom_point(data=d, shape=1) + facet_grid(color~cut)
ggplot(diamonds, aes(x=carat, y=price)) + geom_point(data=d, shape=1) + facet_wrap(~cut)
ggplot(diamonds, aes(x=carat, y=price)) + geom_point(data=d, shape=1) + facet_wrap(color~cut)
?ggplot
ggplot(diamonds, aes(x=carat, y=price)) + geom_hist(data=d, shape=1) + facet_wrap(~cut)
ggplot(diamonds, aes(x=carat, y=price)) + geom_histogram(data=d, binwidth=2,colour="white") + facet_wrap(~cut)
ggplot(diamonds, aes(x=carat, y=price)) + geom_histogram(data=d, binwidth=2,colour="white")
ggplot(diamonds, aes(x=carat)) + geom_histogram(data=d, binwidth=2,colour="white")
ggplot(diamonds, aes(x=price)) + geom_histogram(data=d, binwidth=2,colour="white")
ggplot(diamonds, aes(x=price)) + geom_histogram(data=d, binwidth=100,colour="pink")
ggplot(diamonds, aes(x=price)) + geom_histogram(data=d, binwidth=1000,colour="pink")
ggplot(diamonds, aes(x=price)) + geom_histogram(data=d, binwidth=1000,colour="pink") + facet_wrap(~cut)
ggplot(diamonds, aes(x=price)) + geom_histogram(data=d, binwidth=1000,colour="pink") + facet_wrap(~clarity)
ggplot(diamonds, aes(x=price)) + geom_histogram(data=d, binwidth=1000,colour="pink") + facet_wrap(cut~clarity)
ggplot(diamonds, aes(x=price)) + geom_histogram(data=d, binwidth=1000,colour="pink") + facet_wrap(~clarity)+theme_b_w()
ggplot(diamonds, aes(x=price)) + geom_histogram(data=d, binwidth=1000,colour="pink") + facet_wrap(~clarity)+theme_bw()
ggplot(diamonds, aes(x=price)) + geom_histogram(data=d, binwidth=1000,colour="pink") + facet_wrap(~clarity)
ggplot(diamonds, aes(x=price)) + geom_histogram(data=d, binwidth=1000,colour="pink") + facet_wrap(~clarity)+theme_classic()
d <- ggplot(diamonds, aes(x=carat, y=price)) # first you set the aesthetic and dataset
d + geom_point() # then you add geoms
d + geom_point(aes(colour = carat)) # and you can keep doing this to add layers to the plot
d2<-ggplot(diamonds, aes(x = carat, y = price, colour = carat))
+ geom_point(aes(colour = carat))
d2<-ggplot(diamonds, aes(x = carat, y = price, colour = carat))
+ geom_point()
d2<-ggplot(diamonds, aes(x = carat, y = price, colour = carat)
+ geom_point()
)
(ggplot(diamonds, aes(x = carat, y = price, colour = carat))
+ geom_point())
d2<-(ggplot(diamonds, aes(x = carat, y = price, colour = carat))
+ geom_point())
d2<-(ggplot(diamonds, aes(x = carat, y = price, colour = carat))
+ geom_point())
d2
(ggplot(diamonds, aes(x = carat, y = price, colour = clarity))
+ geom_point())
ggplot(diamonds, aes(x = price)) + geom_histogram()
ggplot(diamonds, aes(x = price, colour = clarity)) + geom_histogram()
library(tidyr)
library(dplyr)
sem <- function(x) {sd(x) / sqrt(length(x))}
ci95 <- function(x) {sem(x) * 1.96}
subinfo <- read.csv("../data/sklar_expt6_subinfo_corrected.csv")
d.a <- read.csv("../data/sklar_expt6a_corrected.csv")
d.b <- read.csv("../data/sklar_expt6b_corrected.csv")
d.along <- gather(d.a, subid, rt, X1:X21)
d.a.long <- gather(d.a, subid, rt, X1:X21)
d.a.long$subid <- sub('X', '', d.a.long$subid)
d.a.long$cond <- 'A'
d.b.long <- gather(d.b, subid, rt, X22:X42)
d.b.long$subid <- sub('X', '', d.b.long$subid)
d.b.long$cond <- 'B'
d.all.long <- bind_rows(d.a.long, d.b.long)
d.all.long$subid <- as.numeric(d.all.long$subid)
d.all.long$cond <- as.factor(d.all.long$cond)
View(d.all.long)
View(d.all.long)
d <- left_join(d.all.long, wsubinfo)
stopifnot(nrow(d) == nrow(d.all.long))
View(d.all.long)
View(d.all.long)
View(subinfo)
View(subinfo)
d <- left_join(d.all.long, wsubinfo)
stopifnot(nrow(d) == nrow(d.all.long))
View(d.all.long)
View(subinfo)
d <- left_join(d.all.long, subinfo)
stopifnot(nrow(d) == nrow(d.all.long))
View(d)
View(d)
d$presentation.time <- factor(d$presentation.time)
levels(d$operand) <- c("addition","subtraction")
hist(d$RT)
d$rt <- as.numeric
d$rt <- as.numeric(d$rt)
hist(d$rt)
qplot(rt, geom = 'histogram', data = d)
qplot(rt, geom = 'histogram', data = d, facet=presentation.time)
qplot(rt, geom = 'histogram', data = d, facet=distance)
qplot(subjective.test, geom = 'histogram', data = d)
qplot(objective.test, geom = 'histogram', data = d)
sort(unique(d$rt))
sort(unique(d$target))
sort(unique(d$prime.result))
(ggplot(d, aes(x = subjective.test, y = objective.test))
+ geom_point())
(ggplot(d, aes(x = subjective.test, y = objective.test, colour = congruent))
+ geom_point())
(ggplot(d, aes(x = subjective.test, y = rt, colour = congruent))
+ geom_point())
(ggplot(d, aes(x = objective.test, y = rt, colour = congruent))
+ geom_point())
(ggplot(d, aes(x = objective.test, y = subjective.test))
+ geom_point())
(ggplot(d, aes(x = objective.test, y = subjective.test))
+ geom_point()) + geom_line(aes())
(ggplot(d, aes(x = objective.test, y = subjective.test))
+ geom_point()) + geom_smooth(method=glm)
(ggplot(d, aes(x = objective.test, y = subjective.test))
+ geom_point()) + geom_smooth(method=lmer)
(ggplot(d, aes(x = objective.test, y = subjective.test))
+ geom_point()) + geom_smooth(method=lm, family="binomial")
(ggplot(d, aes(x = objective.test, y = subjective.test))
+ geom_point()) + stat_smooth(method="glm"", family="binomial", se=F)
(ggplot(d, aes(x = objective.test, y = subjective.test))
+ geom_point()) + stat_smooth(method="glm", family="binomial", se=F)
hist(wsubinfo$subjective.test)
hist(subinfo$subjective.test)
hist(subinfo$objective.test)
plot(subjective.test ~ objective.test, wsubinfo)
plot(subjective.test ~ objective.test, subinfo)
tapply(subinfo$objective.test, subinfo$subjective.test, mean)
ds <- d[d$objective.test < .6 & d$subjective.test == 0, ]
head(ds)
View(ds)
View(ds)
d.subj <- aggregate(rt ~ subid + operand + presentation.time + congruent, ds, FUN = 'mean')
d.subj <- spread(d.subj, congruent, rt)
d.subj <- mutate(d.subj, facilitation = no - yes)
# get sem
d.summary <- aggregate(facilitation ~ operand + presentation.time, d.subj, FUN = mean)
names(d.summary)[3] <- 'mean_facilitation'
d.sem <- aggregate(facilitation ~ operand + presentation.time, d.subj, FUN = sem)
d.summary$sem_facilitation = d.sem$facilitation
View(d.subj)
View(d.subj)
View(d)
d.subj <- aggregate(rt ~ subid + operand + presentation.time + congruent, ds, FUN = 'mean')
View(d.subj)
View(d.subj)
d.subj <- spread(d.subj, congruent, rt)
View(d.subj)
d.subj <- mutate(d.subj, facilitation = no - yes)
View(d.subj)
d.summary <- aggregate(facilitation ~ operand + presentation.time, d.subj, FUN = mean)
names(d.summary)[3] <- 'mean_facilitation'
d.sem <- aggregate(facilitation ~ operand + presentation.time, d.subj, FUN = sem)
d.summary$sem_facilitation = d.sem$facilitation
ggplot(d.summary, aes(x = presentation.time, y = mean_facilitation)) + geom_bar(stat = 'summary', fun.y = 'mean') + facet_grid(.~operand) + geom_errorbar(aes(ymin = mean_facilitation - sem_facilitation, ymax = mean_facilitation + sem_facilitation), width = .5)
(ggplot(d, aes(x = objective.test, y = subjective.test))
+ geom_point()) + stat_smooth(method="glm", family="binomial", se=F)
ds2 <- d[d$objective.test > .6 & d$subjective.test == 0, ]
View(subinfo)
View(subinfo)
ds2 <- d[d$objective.test > .6 & d$subjective.test == 0, ]
d.subj2 <- aggregate(rt ~ subid + operand + presentation.time + congruent, ds2, FUN = 'mean')
d.subj2 <- spread(d.subj2, congruent, rt)
d.subj2 <- mutate(d.subj2, facilitation = no - yes)
# get sem
d.summary2 <- aggregate(facilitation ~ operand + presentation.time, d.subj2, FUN = mean)
names(d.summary2)[3] <- 'mean_facilitation'
d.sem2 <- aggregate(facilitation ~ operand + presentation.time, d.subj2, FUN = sem)
d.summary$sem_facilitation2 = d.sem2$facilitation
```{r}
ds2 <- d[d$objective.test > .6 & d$subjective.test == 0, ]
d.subj2 <- aggregate(rt ~ subid + operand + presentation.time + congruent, ds2, FUN = 'mean')
d.subj2 <- spread(d.subj2, congruent, rt)
d.subj2 <- mutate(d.subj2, facilitation = no - yes)
# get sem
d.summary2 <- aggregate(facilitation ~ operand + presentation.time, d.subj2, FUN = mean)
names(d.summary2)[3] <- 'mean_facilitation'
d.sem2 <- aggregate(facilitation ~ operand + presentation.time, d.subj2, FUN = sem)
d.summary2$sem_facilitation2 = d.sem2$facilitation
ggplot(d.summary2, aes(x = presentation.time, y = mean_facilitation)) + geom_bar(stat = 'summary', fun.y = 'mean') + facet_grid(.~operand) + geom_errorbar(aes(ymin = mean_facilitation - sem_facilitation, ymax = mean_facilitation + sem_facilitation), width = .5)
ggplot(d.summary2, aes(x = presentation.time, y = mean_facilitation)) + geom_bar(stat = 'summary', fun.y = 'mean') + facet_grid(.~operand) + geom_errorbar(aes(ymin = mean_facilitation - sem_facilitation2, ymax = mean_facilitation + sem_facilitation2), width = .5)
ggplot(d.summary, aes(x = presentation.time, y = mean_facilitation)) + geom_bar(stat = 'summary', fun.y = 'mean') + facet_grid(.~operand) + geom_errorbar(aes(ymin = mean_facilitation - sem_facilitation, ymax = mean_facilitation + sem_facilitation), width = .5)
View(ds)
View(ds)
View(d.summary)
View(d.sem)
ds2 <- d[d$objective.test > .6 & d$subjective.test == 0, ]
d.subj2 <- aggregate(rt ~ subid + operand + presentation.time + congruent, ds2, FUN = 'mean')
d.subj2 <- spread(d.subj2, congruent, rt)
d.subj2 <- mutate(d.subj2, facilitation = no - yes)
d.summary2 <- aggregate(facilitation ~ operand + presentation.time, d.subj2, FUN = mean)
names(d.summary2)[3] <- 'mean_facilitation'
d.sem2 <- aggregate(facilitation ~ operand + presentation.time, d.subj2, FUN = sem)
d.summary2$sem_facilitation2 = d.sem2$facilitation
ggplot(d.summary2, aes(x = presentation.time, y = mean_facilitation)) + geom_bar(stat = 'summary', fun.y = 'mean') + facet_grid(.~operand) + geom_errorbar(aes(ymin = mean_facilitation - sem_facilitation2, ymax = mean_facilitation + sem_facilitation2), width = .5)
ggplot(d, aes(x = rt, y = distance)) + geom_bar(stat = 'summary', fun.y = 'mean')
ggplot(d, aes(x = rt, y = distance))
(ggplot(d, aes(x = distance.test, y = rt, colour = congruent))
+ geom_point())
(ggplot(d, aes(x = distance, y = rt, colour = congruent))
+ geom_point())
ggplot(d, aes(x = distance, colour=rt)) + geom_histogram()
ggplot(d, aes(x = rt, colour=distance)) + geom_histogram()
View(ds)
ggplot(d, aes(x = distance, colour=rt)) + geom_histogram()
ggplot(d, aes(x = distance)) + geom_histogram()
library(ggplot2)
library(reshape2)
library(bootstrap)
library(lme4)
library(stringr)
library(lubridate)
library(plyr) # first load plyr then dplyr from https://github.com/hadley/dplyr
library(dplyr)
library(tidyr)
head(diamonds)
qplot(diamonds$carat, diamonds$price)
qplot(clarity, price, data=d)
d<-diamonds
qplot(carat, price, data = d)
qplot(clarity, price, data=d)
qplot(clarity, price, data=d)
qplot(cut, price, data=d)
qplot(color, price)
